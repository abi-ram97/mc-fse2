eksctl create cluster --name mc-fse --version 1.20 --with-oidc --without-nodegroup

kubectl get svc

eksctl create nodegroup --cluster test-k8s --region us-east-2 --name nodes --node-type t2.small --nodes 1 --nodes-min 1 --nodes-max 2 --managed

kubectl get services

kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4

kubectl get deployments

kubectl get pods

kubectl exec -it hello-node-7567d9fdc9-xrz44<pod_name> bash

kubectl exec -it hello-node-7567d9fdc9-xrz44<pod_name> -- /bin/sh

kubectl logs <pod_name>

kubectl expose deployment hello-node --type=LoadBalancer --port=8080

kubectl delete deployments hello-node

kubectl delete service hello-node

kubectl create service externalname aws-rds --external-name stocks-rds.cpww3n4jiefr.us-east-2.rds.amazonaws.com --tcp=3306:3306

kubectl describe service aws-rds

kubectl apply -f c:\k8s\stock-deployment.yml

kubectl get events

kubectl expose deployment stock-service --type=LoadBalancer --port=8082

kubectl get services

kubectl autoscale deployment company-service --cpu-percent=50 --min=1 --max=3

kubectl get hpa

kubectl top pods

kubectl top nodes

kubectl get pods

kubectl exec -it <pod_name> -- /bin/sh

kubectl logs <pod_name>

kubectl delete all --all

eksctl delete nodegroup --cluster=test-k8s --name=nodes

eksctl delete cluster --name=test-k8s

Ref: https://github.com/weaveworks/eksctl/tree/main/examples

---

minikube start

minikube addons enable metrics-server

minikube dashboard --url

minikube service <service-name>

minikube stop